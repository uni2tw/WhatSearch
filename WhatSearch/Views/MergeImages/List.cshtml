@using WhatSearch.Controllers
@using WhatSearch.Utility
@{
    this.Layout = "_Layout.cshtml";
}

@section header {
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs="
        crossorigin="anonymous"></script>
<style>
label {
    margin: .5rem;
}
    progress {
        width: 100%;
        height: 3em;
        color: black;
        font-size: 1.5em;
        text-align: center;
        padding-top: .7em;
        font-weight: bold;
    }

    progress:before {
        content: attr(data-label);
    }

    .table tbody tr {
        border-bottom: 1px dashed lightgrey;
    }

    .nav-menu {
        color: black;
        border: 1px solid darkgray;
        background-color: white !important;
        font-size: 2em;
        padding: 0.2em 0px;
        box-shadow: 3px 0px 5px;
    }

    .nav-menu-item {
        text-align: center;
        padding: .4em 1em;
    }

    #headPanel {
        display: flex;
        font-size: 2rem;
        font-weight: bold;
        justify-content: space-between;
    }

    #commandPanel {
        border-top: 3px dashed #292d29;
        border-bottom: 3px dashed #292d29;
        
        justify-content: space-between;
        font-size: 1.2rem;
        padding: 5px 3px;
    }


    canvas {
        border: 3px solid lightgrey;
        display: block;
    }
    canvas.selected {
        border: 3px solid black;
    }
    .canvasData {
        display: none;
    }
</style>
}



<body>
    <div id="app">
        <div class="container-fluid">
            <div id="headPanel">
                <h1 style="width:50%">Merge images</h1>
                <a id="linkDownloadImage" style="width:50%; text-align: right" href="">Download</a>
            </div>
            <div id="commandPanel">                
                <button id="btnUndo" class="btn btn-success">Undo</button>
                <button id="btnCrop" style=" margin-left:1rem" class="btn btn-success">Crop</button>
                <input id="uploadFile" accept="image/*" type="file" style="width:1px; display:none" />
                <button id="btnUpload" style=" margin-left:1rem;" class="btn btn-success">Upload file</button>                
            </div>
            <div style="display:grid; grid-template-columns: 33% 33% 33%">
                <div style="display: table-row; padding:.5rem">
                    <div style="display: table-cell">
                        <label for="name" class="control-label">Max width:</label>                    
                        <input type="number" id="txtMaxWidth" class="form-control">
                    </div>
                </div>
                <div style="display: table-row; padding:.5rem">
                    <div style="display: table-cell">
                        <label for="name" class="control-label">Max height:</label>                    
                        <input type="number" id="txtMaxHeight" class="form-control">
                    </div>
                </div>
                <div style="display: table-row; padding:.5rem">
                    <div style="display: table-cell">
                        <label for="name" class="control-label">Room ratio:</label>
                        
                    </div>
                </div>
            </div>
            <div id="canvasBody" style="position:relative; ">
                <div class="canvasItem">
                    <canvas class="canvasView" width="600" height="600"></canvas>
                    <canvas class="canvasData" width="600" height="600"></canvas>
                </div>
                <div class="canvasItem">
                    <canvas class="canvasView" width="600" height="600"></canvas>
                    <canvas class="canvasData" width="600" height="600"></canvas>
                </div>
                <div class="canvasItem">
                    <canvas class="canvasView" width="600" height="600"></canvas>
                    <canvas class="canvasData" width="600" height="600"></canvas>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        // merge rule: match small images width or height, no resize , only crop to center.
        const _MATCH_SMALL_SIZE_CROP_CENTER = 1;
        window.settings = {};
        window.settings.cropMode = _MATCH_SMALL_SIZE_CROP_CENTER;
        window.settings.maxWidth = null;
        window.settings.maxHeight = null;

        var canvasItems = [];
        canvasItems.getSelectedItem = function() {
            for(var i in this) {
                let item = this[i];
                if ($(item.canvasView).is('.selected')) {
                    return item;
                }
            }
            return null;
        }
        $('.canvasItem').each(function() {
            let canvasView = $(this).find('.canvasView')[0];
            let canvasData = $(this).find('.canvasData')[0];
            //canvasView is canvas that shrinked for page.
            //canvasData is raw canvas.
            canvasItems.push({
                "canvasView": canvasView,
                "canvasData": canvasData,
                "imgData": null,
                "dataWidth": 0,
                "dataHeight": 0,
                "viewWidth":0,
                "viewHeight":0
            });
            if (canvasItems.length == 1) {
                $(canvasItems[0].canvasView).addClass('selected');
            }
        });

        //點擊切換 canvas 的焦點
        $( "#canvasBody" ).on( "click", ".canvasView", function() {
            for(var i in canvasItems) {
                let item = canvasItems[i];
                $(item.canvasView).removeClass('selected');
            }
            $(this).addClass('selected');
        });

        window.handleFiles = function() {
            if (this.files.length == 0) {
                return false;
            }            
            var file = this.files[0];
            let src = window.URL.createObjectURL(file);
            window.renderImage(canvasItems.getSelectedItem(), src);
        }
        var uploadFile = document.getElementById("uploadFile");
        uploadFile.addEventListener("change", handleFiles, false);
        
        $('#btnUpload').click(function() {
            $('input[type=file]').trigger('click');
        });


        window.renderImage = function(canvasItem, imgSrc) {
            if (canvasItem == null) {
                console.log('renderImage fail, canvasItem is null.');
                return;
            }
            let canvasView = canvasItem.canvasView;
            let canvasData = canvasItem.canvasData;
            const ctxView = canvasView.getContext('2d');
            const ctxData = canvasData.getContext('2d');
            const img = new Image();
            img.onload = function() {
                console.log('img loaded ' + this.width + 'x' + this.height);

                var dx = 0;
                var dy = 0;
                var dw = this.width;
                var dh = this.height;

                var vx = 0;
                var vy = 0;
                var vw = canvasView.width;
                var vh = parseInt( this.height * (canvasView.width / this.width), 10);
                
                console.log('v: ' + vw + 'x' + vh);                
                canvasView.height = vh;

                /*
                ctxView.width = vw;
                ctxView.height = vh;

                ctxData.width = dw;
                ctxData.height = dh;

                canvasItem.imgData = img;
                canvasItem.dataWidth = dw;
                canvasItem.dataHeight = dh;
                canvasItem.viewWidth = vw;
                canvasItem.viewHeight = vh;
                */
                canvasItem.imgData = img;
                ctxView.drawImage(img, 0, 0, this.width, this.height, 0, 0, vw, vh);                
                //ctxData.drawImage(img, dx, dy, dw, dh, 0, 0, dw, dh);
            }
            img.src = imgSrc;
        }
        window.findCanvasItem = function(canvas) {
            for(var i in canvasItems){
                if (imgItems[i].canvasView == canvas) {
                    return imgItems[i];
                }
            }
            return null;
        }
        const getFitnessCanvasWidth = function() {
            return $(window).width() - 30;
        }
        //隨著裝置寬度，調整canvas的寬度
        const resizeCanvasWidthByWindowWidth = function() {            
            let cw = getFitnessCanvasWidth();
            $('.canvasView').each(function() {
                this.width = cw;
                this.height = cw;
            });            
        }
        window.addEventListener('resize', resizeCanvasWidthByWindowWidth);
        window.addEventListener('load', resizeCanvasWidthByWindowWidth);
    </script>
</body>